<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dev.alleon.mappers.article.CommentMapper">
    <insert id="insert"
            useGeneratedKeys="true"
            keyColumn="index"
            keyProperty="index">
        INSERT INTO `aeo`.`comments` (`user_index`, `article_index`, `content`, `created_at`, `modified_at`,
                                      `is_deleted`)
        VALUES (#{comment.userIndex},
                #{comment.articleIndex},
                #{comment.content},
                #{comment.createdAt},
                #{comment.modifiedAt},
                #{comment.isDeleted})
    </insert>

    <select id="totalCountByArticleIndex" resultType="java.lang.Integer">
        select count(0)
        from `aeo`.`comments` as `t0`
                 left join `aeo`.`articles` as `t1` on `t0`.`article_index` = `t1`.`index`
                 left join aeo.`users` as `t2` on `t0`.`user_index` = `t2`.`index`
        where `t1`.`index` = #{articleIndex}
          and `t0`.`is_deleted` = false
    </select>

    <select id="getCommentByArticleIndex" resultType="com.dev.alleon.dtos.Comment.CommentDto">
        select `t0`.`index`                            as `index`,
               `t0`.`content`                          as `content`,
               `t0`.`created_at`                       as `createdAt`,
               `t2`.`nickname`                         as `nickname`,
               `t2`.`profile`                          as `profileImage`,
               `t0`.`user_index` = #{currentUserIndex} AS `isMine`
        from `aeo`.`comments` as `t0`
                 left join `aeo`.`articles` as `t1` on `t0`.`article_index` = `t1`.`index`
                 left join aeo.`users` as `t2` on `t0`.`user_index` = `t2`.`index`
        where `t0`.`article_index` = #{articleIndex}
          and `t0`.`is_deleted` = false
        ORDER BY `t0`.`created_at` DESC
        LIMIT #{pageVo.rowCount} OFFSET #{pageVo.dbOffset}
    </select>

    <select id="selectByIndex" resultType="com.dev.alleon.entities.article.CommentEntity">
        select `index`         as `index`,
               `user_index`    as `userIndex`,
               `article_index` as `articleIndex`,
               `content`       as `content`,
               `created_at`    as `createdAt`,
               `modified_at`   as `modifiedAt`,
               `is_deleted`    as `isDeleted`
        from `aeo`.`comments`
        where `index` = #{index}
    </select>


    <update id="update">
        UPDATE `aeo`.`comments`
        SET `content`     = #{comment.content},
            `modified_at` = #{comment.modifiedAt},
            `is_deleted`  = #{comment.isDeleted}
        WHERE `index` = #{comment.index}
        LIMIT 1
    </update>
</mapper>